<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>lsh::blog</title><link>https://lyubomyr-shaydariv.github.io/</link><description>Lyubomyr Shaydariv's coding blog</description><atom:link href="https://lyubomyr-shaydariv.github.io/rss.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents © 2021 &lt;a href="mailto:"&gt;Lyubomyr Shaydariv&lt;/a&gt; </copyright><lastBuildDate>Mon, 19 Apr 2021 08:21:14 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Rest in peace Keith Flint, the only Firestarter</title><link>https://lyubomyr-shaydariv.github.io/posts/2019-03-04-rip-keith-flint/</link><dc:creator>Lyubomyr Shaydariv</dc:creator><description>&lt;p&gt;&lt;img alt="Firestarter" src="https://lyubomyr-shaydariv.github.io/images/firestarter.jpg"&gt;&lt;/p&gt;</description><category>firestarter</category><category>keith-flint</category><category>the-prodigy</category><guid>https://lyubomyr-shaydariv.github.io/posts/2019-03-04-rip-keith-flint/</guid><pubDate>Mon, 04 Mar 2019 15:49:00 GMT</pubDate></item><item><title>Mercurial subrepositories to Git submodules</title><link>https://lyubomyr-shaydariv.github.io/posts/2019-02-06-hg-subrepos-to-git-submodules/</link><dc:creator>Lyubomyr Shaydariv</dc:creator><description>&lt;div&gt;&lt;p&gt;I didn't start with Git.
Mercurial has become my first DVCS.
Because of that, Mercurial actually ate my first source code.
I'm a huge Git fan now, and I switched all my single-repo repositories to Git using &lt;a href="https://github.com/frej/fast-export"&gt;this awesome tool&lt;/a&gt;.
Now, long few years later, the tool has &lt;a href="https://github.com/frej/fast-export/issues/51"&gt;finally&lt;/a&gt; gotten the Mercurial subrepositories to Git submodules support, so now I'm able to migrate to Git completely.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://lyubomyr-shaydariv.github.io/posts/2019-02-06-hg-subrepos-to-git-submodules/"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>git</category><category>hg</category><guid>https://lyubomyr-shaydariv.github.io/posts/2019-02-06-hg-subrepos-to-git-submodules/</guid><pubDate>Wed, 06 Feb 2019 20:16:00 GMT</pubDate></item><item><title>foreach is an MVP pattern implementation</title><link>https://lyubomyr-shaydariv.github.io/posts/2018-07-25-foreach-is-an-mvp-pattern-implementation/</link><dc:creator>Lyubomyr Shaydariv</dc:creator><description>&lt;div&gt;&lt;p&gt;The &lt;code&gt;foreach&lt;/code&gt;, enhanced &lt;code&gt;for&lt;/code&gt; statement, is a perfect example of an &lt;a href="https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93presenter"&gt;MVP&lt;/a&gt; pattern implementation.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://lyubomyr-shaydariv.github.io/posts/2018-07-25-foreach-is-an-mvp-pattern-implementation/"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>java</category><guid>https://lyubomyr-shaydariv.github.io/posts/2018-07-25-foreach-is-an-mvp-pattern-implementation/</guid><pubDate>Wed, 25 Jul 2018 11:16:00 GMT</pubDate></item><item><title>Efficient git filter-branch and --index-filter implementation</title><link>https://lyubomyr-shaydariv.github.io/posts/2018-07-18-efficient-git-filter-branch-index-filter/</link><dc:creator>Lyubomyr Shaydariv</dc:creator><description>&lt;div&gt;&lt;p&gt;About two years ago I posted a post that described how you can use Git and Mercurial to create encrypted repositories.
Back to then, I claimed that the encryption cannot be changed and the encryption method will be constant for the entire repository lifecycle.
Well, sort of, from the user's perspective (at least if you don't use versioned &lt;code&gt;.gitattributes&lt;/code&gt; that refer different crypto-filters).
Using and maintaining such repositories can be not a fun, and you might want to decrypt the whole repository some rainy day.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://git-scm.com/docs/git-filter-branch"&gt;&lt;code&gt;git filter-branch&lt;/code&gt;&lt;/a&gt; (a bit of a cryptic name, as well, yeah?) is a right tool.
It features a lot of filtering options that can transform the original repository from scratch, and we're going to use &lt;code&gt;--index-filter&lt;/code&gt;...&lt;/p&gt;
&lt;p&gt;&lt;a href="https://lyubomyr-shaydariv.github.io/posts/2018-07-18-efficient-git-filter-branch-index-filter/"&gt;Read more…&lt;/a&gt; (3 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>git</category><guid>https://lyubomyr-shaydariv.github.io/posts/2018-07-18-efficient-git-filter-branch-index-filter/</guid><pubDate>Wed, 18 Jul 2018 20:30:00 GMT</pubDate></item><item><title>The Java language seems to go a wrong way</title><link>https://lyubomyr-shaydariv.github.io/posts/2018-05-14-the-java-language-seems-to-go-a-wrong-way/</link><dc:creator>Lyubomyr Shaydariv</dc:creator><description>&lt;div&gt;&lt;p&gt;I'm not sure if the Java language goes a right way.
The new Java language features look really not I would like to have in Java.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://lyubomyr-shaydariv.github.io/posts/2018-05-14-the-java-language-seems-to-go-a-wrong-way/"&gt;Read more…&lt;/a&gt; (3 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>java</category><guid>https://lyubomyr-shaydariv.github.io/posts/2018-05-14-the-java-language-seems-to-go-a-wrong-way/</guid><pubDate>Mon, 14 May 2018 06:00:00 GMT</pubDate></item><item><title>Detecting excessively suppressed redirects in MediaWiki</title><link>https://lyubomyr-shaydariv.github.io/posts/2018-05-06-detecting-excessively-suppressed-redirects-in-mediawiki/</link><dc:creator>Lyubomyr Shaydariv</dc:creator><description>&lt;div&gt;&lt;p&gt;A simple Python script to detect excessively redirected pages in MediaWiki.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://lyubomyr-shaydariv.github.io/posts/2018-05-06-detecting-excessively-suppressed-redirects-in-mediawiki/"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>mediawiki</category><category>python</category><category>pywikibot</category><guid>https://lyubomyr-shaydariv.github.io/posts/2018-05-06-detecting-excessively-suppressed-redirects-in-mediawiki/</guid><pubDate>Sun, 06 May 2018 02:00:00 GMT</pubDate></item><item><title>Unique code search algorithm rewritten in almost pure ReQL</title><link>https://lyubomyr-shaydariv.github.io/posts/2017-11-22-unique-code-search-algorithm-rewritten-in-almost-pure-reql/</link><dc:creator>Lyubomyr Shaydariv</dc:creator><description>&lt;div&gt;&lt;p&gt;In my previous post regarding generating the unique codes out of the free codes.
That implementation was based on a JavaScript function that accepted a strategy to be invoked each time a binary search iteration is in progress.
I also mentioned that due this it will do &lt;em&gt;log n&lt;/em&gt; queries to the RethinkDB database, and I assumpted that it can be fully ReQL based.
Yes, it can be executed fully on the RethinkDB side being re-implemented in pure ReQL.
Almost.
Let's see how.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://lyubomyr-shaydariv.github.io/posts/2017-11-22-unique-code-search-algorithm-rewritten-in-almost-pure-reql/"&gt;Read more…&lt;/a&gt; (2 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>algorithms</category><category>javascript</category><category>reql</category><category>rethinkdb</category><guid>https://lyubomyr-shaydariv.github.io/posts/2017-11-22-unique-code-search-algorithm-rewritten-in-almost-pure-reql/</guid><pubDate>Wed, 22 Nov 2017 16:10:00 GMT</pubDate></item><item><title>Finding a unique code in a code pool in RethinkDB</title><link>https://lyubomyr-shaydariv.github.io/posts/2017-11-14-finding-a-unique-code-in-a-code-pool-in-rethinkdb/</link><dc:creator>Lyubomyr Shaydariv</dc:creator><description>&lt;div&gt;&lt;p&gt;My recent project had a lot of fun to work with.
And, as I said before, working with RethinkDB was fun too.
Since that project implemented a virtual file system, it also had to share a file by a unique file by a unique code (say, &lt;code&gt;kl2890aj&lt;/code&gt; or &lt;code&gt;2opOZxk1&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;How did it share a file by a unique code similarly to what Dropbox or YouTube do?&lt;/p&gt;
&lt;p&gt;&lt;a href="https://lyubomyr-shaydariv.github.io/posts/2017-11-14-finding-a-unique-code-in-a-code-pool-in-rethinkdb/"&gt;Read more…&lt;/a&gt; (3 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>algorithms</category><category>javascript</category><category>reql</category><category>rethinkdb</category><guid>https://lyubomyr-shaydariv.github.io/posts/2017-11-14-finding-a-unique-code-in-a-code-pool-in-rethinkdb/</guid><pubDate>Tue, 14 Nov 2017 20:37:00 GMT</pubDate></item><item><title>Making a unique filename by adding a copy number in RethinkDB</title><link>https://lyubomyr-shaydariv.github.io/posts/2017-11-14-making-a-unique-filename-by-adding-a-copy-number-in-rethinkdb/</link><dc:creator>Lyubomyr Shaydariv</dc:creator><description>&lt;div&gt;&lt;p&gt;&lt;a href="https://www.rethinkdb.com/"&gt;RethinkDB&lt;/a&gt; is a beautiful document-oriented database I was lucky to use for my most recent project.
Unfortunately, I don't work for that project anymore, but I would like to share some ideas I implemented while working on that project.&lt;/p&gt;
&lt;p&gt;That project implemented a virtual file system table in a RethinDB database, and one of the requirements while creating a new file entry was making its filename unique.
A usual filename generated chain named as if you downloading a same-named file: &lt;code&gt;file.ext&lt;/code&gt;, &lt;code&gt;file (1).ext&lt;/code&gt;, &lt;code&gt;file (2).ext&lt;/code&gt; and so on.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://lyubomyr-shaydariv.github.io/posts/2017-11-14-making-a-unique-filename-by-adding-a-copy-number-in-rethinkdb/"&gt;Read more…&lt;/a&gt; (3 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>reql</category><category>rethinkdb</category><guid>https://lyubomyr-shaydariv.github.io/posts/2017-11-14-making-a-unique-filename-by-adding-a-copy-number-in-rethinkdb/</guid><pubDate>Tue, 14 Nov 2017 11:13:00 GMT</pubDate></item><item><title>Optional&lt;T&gt; tends to be used in a wrong way</title><link>https://lyubomyr-shaydariv.github.io/posts/2017-01-26-optional-tends-to-be-used-in-a-wrong-way/</link><dc:creator>Lyubomyr Shaydariv</dc:creator><description>&lt;div&gt;&lt;p&gt;Want to explicitly declare a nullability contract?
You probably might want to use &lt;code&gt;Optional&amp;lt;T&amp;gt;&lt;/code&gt;, but it does not seem to be the best way.
I've got some cons against it.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://lyubomyr-shaydariv.github.io/posts/2017-01-26-optional-tends-to-be-used-in-a-wrong-way/"&gt;Read more…&lt;/a&gt; (2 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>java</category><category>java-8</category><guid>https://lyubomyr-shaydariv.github.io/posts/2017-01-26-optional-tends-to-be-used-in-a-wrong-way/</guid><pubDate>Thu, 26 Jan 2017 00:12:00 GMT</pubDate></item></channel></rss>